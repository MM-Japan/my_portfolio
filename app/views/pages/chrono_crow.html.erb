<div class="chrono-crow-page">
  <link rel="stylesheet" href="<%= File.join(@chronocrow_root_path, 'TemplateData', 'style.css') %>">
  <div class="chrono-crow-player-frame">
    <div id="unity-container" class="unity-desktop">
      <canvas id="unity-canvas"></canvas>
      <div id="unity-loading-bar">
        <div id="unity-logo"></div>
        <div id="unity-progress-bar-empty">
          <div id="unity-progress-bar-full"></div>
        </div>
      </div>
      <div id="unity-warning"></div>
      <div id="unity-footer">
        <div id="unity-fullscreen-button"></div>
        <div id="unity-mobile-warning">Best experienced in landscape orientation on mobile.</div>
      </div>
    </div>
    <div class="chrono-crow-mobile-fullscreen-control">
      <button type="button" class="chrono-crow-fullscreen-button" aria-label="Enter fullscreen">
        Fullscreen
      </button>
    </div>
  </div>
  <script src="<%= @chronocrow_loader_path %>"></script>
  <script>
    const canvas = document.querySelector('#unity-canvas');
    const container = document.querySelector('#unity-container');
    const frame = document.querySelector('.chrono-crow-player-frame');
    const loadingBar = document.querySelector('#unity-loading-bar');
    const progressBarFull = document.querySelector('#unity-progress-bar-full');
    const fullscreenButton = document.querySelector('#unity-fullscreen-button');
    const mobileFullscreenButton = document.querySelector('.chrono-crow-fullscreen-button');
    const mobileFullscreenControl = document.querySelector('.chrono-crow-mobile-fullscreen-control');
    const warningBanner = document.querySelector('#unity-warning');
    warningBanner.style.display = 'none';

    if (mobileFullscreenButton) {
      mobileFullscreenButton.disabled = true;
    }

    function updateBannerVisibility() {
      warningBanner.style.display = warningBanner.children.length ? 'block' : 'none';
    }

    function unityShowBanner(msg, type) {
      const div = document.createElement('div');
      div.innerHTML = msg;
      div.className = 'unity-banner ' + (type || '');
      warningBanner.appendChild(div);
      if (type === 'warning') {
        setTimeout(() => {
          warningBanner.removeChild(div);
          updateBannerVisibility();
        }, 5000);
      } else if (type === 'error') {
        div.addEventListener('click', () => {
          warningBanner.removeChild(div);
          updateBannerVisibility();
        });
      }
      updateBannerVisibility();
    }

    const config = {
      dataUrl: "<%= @chronocrow_data_path %>",
      frameworkUrl: "<%= @chronocrow_framework_path %>",
      codeUrl: "<%= @chronocrow_wasm_path %>",
      streamingAssetsUrl: "<%= @chronocrow_streaming_assets_path %>",
      companyName: 'Chrono Crow Team',
      productName: 'Chrono Crow',
      productVersion: '0.1',
      showBanner: unityShowBanner
    };

    const aspectRatio = 16 / 10;

    function applyResponsiveSizing() {
      const viewportWidth = window.innerWidth;
      const isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent) || viewportWidth < 992;
      const pixelRatio = isMobile ? 1 : (window.devicePixelRatio || 1);

      if (isMobile) {
        container.classList.remove('unity-desktop');
        container.classList.add('unity-mobile');
      } else {
        container.classList.add('unity-desktop');
        container.classList.remove('unity-mobile');
      }

      if (mobileFullscreenControl) {
        mobileFullscreenControl.style.display = isMobile ? 'flex' : 'none';
      }

      const frameRect = frame.getBoundingClientRect();
      const frameHeight = frameRect.height || (frameRect.width / aspectRatio);
      config.devicePixelRatio = pixelRatio;
      canvas.style.maxWidth = '100%';
      canvas.style.width = '100%';
      canvas.style.height = '100%';
      canvas.width = Math.round(frameRect.width * pixelRatio);
      canvas.height = Math.round(frameHeight * pixelRatio);
    }

    applyResponsiveSizing();
    window.addEventListener('resize', applyResponsiveSizing);

    loadingBar.style.display = 'block';

    createUnityInstance(canvas, config, (progress) => {
      progressBarFull.style.width = 100 * progress + '%';
    })
      .then((unityInstance) => {
        loadingBar.style.display = 'none';
        fullscreenButton.onclick = () => {
          unityInstance.SetFullscreen(1);
        };
        if (mobileFullscreenButton) {
          mobileFullscreenButton.disabled = false;
          mobileFullscreenButton.addEventListener('click', () => {
            unityInstance.SetFullscreen(1);
          });
        }
      })
      .catch((message) => {
        unityShowBanner(message, 'error');
      });
  </script>
</div>
